{"version":3,"sources":["webpack/bootstrap b9ad501b2ad33e84f563","./js/main.js","./js/snake-view.js","./js/snake.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;;AAEA;AACA;AACA;AACA,EAAC;;;;;;;ACLD;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;;AAEA,kBAAiB,oBAAoB;AACrC;AACA,oBAAmB,oBAAoB;AACvC;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,IAAG;AACH;;;;;AAKA;;;;;;;AC3EA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,kBAAiB,SAAS;AAC1B;AACA,oBAAmB,SAAS;AAC5B;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,IAAG;;AAEH;;AAEA;AACA;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA,wBAAuB;AACvB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,kBAAiB,8BAA8B;AAC/C;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/js/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap b9ad501b2ad33e84f563\n **/","var View = require('./snake-view.js');\n\n$(function () {\n  var rootEl = $('.snake-game');\n  new View(rootEl);\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/main.js\n ** module id = 0\n ** module chunks = 0\n **/","var Board = require('./snake.js');\n\nfunction View($el){\n  this.$el = $el;\n  this.board = new Board(20);\n  this.setupGrid();\n\n  setInterval(this.step.bind(this), 500);\n  $(window).on(\"keydown\", this.handleKeyEvent.bind(this));\n};\n\n\nvar DIRECTIONS = {\n  38: \"N\",\n  40: \"S\",\n  37: \"W\",\n  39: \"E\"\n};\n\nView.prototype.handleKeyEvent = function (e) {\n  var code = e.keyCode;\n  if (DIRECTIONS[e.keyCode]){\n    var newDirection = DIRECTIONS[code];\n    // left = 37, up = 38, right = 39, down = 40;\n    this.board.snake.turn(newDirection);\n  };\n};\n\n\nView.prototype.step = function () {\n  if (this.board.snake.segments.length > 0) {\n      this.board.snake.move();\n      this.render();\n  } else {\n    // alert(\"You lose!\");\n    // window.clearInterval(this.intervalId);\n  }\n};\n\nView.prototype.setupGrid = function () {\n  var html = \"\";\n\n  for (var i = 0; i < this.board.dim; i++) {\n    html += \"<ul>\";\n    for (var j = 0; j < this.board.dim; j++) {\n      html += \"<li></li>\";\n    }\n    html += \"</ul>\";\n  }\n\n  this.$el.html(html);\n  this.$li = this.$el.find(\"li\");\n};\n\nView.prototype.render = function () {\n  // simple text based rendering\n  // this.$el.html(this.board.render());\n\n  // color rendering\n  this.updateClasses(this.board.snake.segments, \"snake\");\n  this.updateClasses([this.board.apple.position], \"apple\");\n};\n\nView.prototype.updateClasses = function(coords, className) {\n  this.$li.filter(\".\" + className).removeClass();\n\n  coords.forEach(function(coord){\n    var flatCoord = (coord.x * this.board.dim) + coord.y;\n    this.$li.eq(flatCoord).addClass(className);\n  }.bind(this));\n};\n\n\n\n\nmodule.exports = View;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/snake-view.js\n ** module id = 1\n ** module chunks = 0\n **/","function Coord (x, y) {\n  this.x = x;\n  this.y = y;\n}\n\nCoord.prototype.plus = function (secondCord) {\n  var x = this.x + secondCord.x;\n  var y = this.y + secondCord.y;\n  return new Coord(x,y);\n};\n\nCoord.prototype.equals = function (secondCord) {\n  return (this.x === secondCord.x && this.y === secondCord.y);\n};\n\nCoord.prototype.isOpposite = function (secondCord) {\n  return (this.x + secondCord.x ===0 &&\n          this.y + secondCord.y ===0)\n};\n\nvar DIRECTIONS = {\n  \"N\": new Coord(-1, 0),\n  \"S\": new Coord(1, 0),\n  \"W\": new Coord(0, -1),\n  \"E\": new Coord(0, 1)\n};\n\nvar BLANK_SYMBOL = \" \";\nvar SNAKE_SYMBOL = \"S\";\nvar APPLE_SYMBOL = \"A\";\n\nfunction Board (dim) {\n  this.dim = dim;\n  this.snake = new Snake(this);\n  this.apple = new Apple(this);\n}\n\nBoard.prototype.setupGrid = function (dim) {\n  var grid = [];\n  for (var i = 0; i < dim; i++) {\n    var row = [];\n    for (var j = 0; j < dim; j++) {\n      row.push(Board.BLANK_SYMBOL);\n    }\n    grid.push(row);\n  }\n\n  return grid;\n};\n\nBoard.prototype.render = function () {\n  var grid = Board.setupGrid(this.dim);\n\n  this.snake.segments.forEach(function (segment) {\n    grid[segment.x][segment.y] = SNAKE_SYMBOL;\n  });\n\n  grid[this.apple.position.x][this.apple.position.y] = APPLE_SYMBOL;\n\n  // join it up\n  var rowStrs = [];\n  grid.map(function (row) {\n    return row.join(\"\");\n  }).join(\"\\n\");\n};\n\nBoard.prototype.validPosition = function (coord) {\n  return (coord.x >= 0) && (coord.x < this.dim) &&\n    (coord.y >= 0) && (coord.y < this.dim);\n};\n\n\nfunction Snake (board) {\n  this.board = board;\n  this.direction = \"N\"; // E, S, W\n  var center = Math.floor(board.dim/2);\n  this.segments = [new Coord(center, center),\n                  new Coord(center +1, center),\n                  new Coord(center +2, center)];\n}\n\nSnake.prototype.head = function () {\n  return this.segments[0];\n};\n\nSnake.prototype.isOccupying = function (array) {\n  var result = false;\n  this.segments.forEach(function (segment) {\n    if (segment.x === array[0] && segment.y === array[1]) {\n      result = true;\n      return result;\n    }\n  });\n  return result;\n};\n\nSnake.prototype.isValid = function () {\n  var head = this.head();\n\n  if (!this.board.validPosition(head)){\n    return false;\n  }\n\n  for (var i = 1; i < this.segments.length - 1; i++) {\n    if (this.segments[i].equals(head)) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\nSnake.prototype.move = function () {\n  this.segments.unshift(this.head().plus(DIRECTIONS[this.direction]));\n  this.segments.pop();\n\n  if (!this.isValid()) {\n    this.segments = [];\n    alert(\"game over\");\n  }\n};\n\nSnake.prototype.turn = function (newDirection) {\n  if (!DIRECTIONS[this.direction].isOpposite(DIRECTIONS[newDirection])){\n    this.direction = newDirection;\n  }\n};\n\nfunction Apple(board) {\n  this.board = board;\n  this.position = new Coord(0,0);\n}\n\nmodule.exports = Board;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/snake.js\n ** module id = 2\n ** module chunks = 0\n **/"],"sourceRoot":""}